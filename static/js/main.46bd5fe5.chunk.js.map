{"version":3,"sources":["components/Introduction.js","components/Board.js","hooks/useBoard.js","App.js","reportWebVitals.js","index.js"],"names":["IntroductionWrapper","styled","div","Title","h1","RestartButton","button","introduction","winner","handleRestartButtonClick","onClick","Board","BoardRow","BoardSquare","Cell","props","color","rows","Array","from","length","columns","board","handlePlayClick","currentPlayer","map","row","x","square","y","useBoard","initialPlayer","initialBoard","fill","useState","setBoard","setPlayer","setWinner","countTotal","newBoard","currentX","currentY","directionX","directionY","now","tempX","tempY","total","JSON","parse","stringify","checkWinner","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46bd5fe5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst IntroductionWrapper = styled.div`\n  text-align: center;\n  margin-top: 10px;\n  color: white;\n`;\n\nconst Title = styled.h1`\n  font-size: 18px;\n  margin: 5px 0;\n`;\n\nconst RestartButton = styled.button`\n  background: pink;\n  padding: 5px 15px;\n  border-radius: 10px;\n  border: transparent;\n  outline: none;\n  cursor: pointer;\n  box-shadow: 0px 4px #888888;\n  color: #333;\n  &:active {\n    transform: translateY(2px);\n    box-shadow: 0px 0px #888888;\n  }\n`;\n\nexport default function introduction({ winner, handleRestartButtonClick }) {\n  return (\n    <IntroductionWrapper>\n      <Title>{winner ? `${winner} wins` : 'React Gomoku Practice'}</Title>\n      <RestartButton onClick={handleRestartButtonClick}>\n        Play Again\n      </RestartButton>\n    </IntroductionWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nconst Board = styled.div`\n  margin: 10px auto 0;\n  padding: 0px;\n  width: 532px;\n  height: 531px;\n  background: #e6b77e;\n`;\n\nconst BoardRow = styled.div`\n  width: 100%;\n  height: calc(532px / 19);\n  background: transparent;\n  display: flex;\n`;\n\nconst BoardSquare = styled.div`\n  width: 27px;\n  height: 27px;\n  margin-top: -1px;\n  margin-right: -1px;\n  border: 1px solid #333;\n  &:hover {\n    background: #e0ce8a;\n  }\n  position: relative;\n`;\n\nconst Cell = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: ${(props) => props.color};\n  box-sizing: border-box;\n  position: absolute;\n`;\n\nconst rows = Array.from({ length: 19 });\nconst columns = Array.from({ length: 19 });\n\nexport default function board({\n  handlePlayClick,\n  currentPlayer,\n  board\n}) {\n  return (\n    <Board>\n        {rows.map((row, x) => (\n          <BoardRow key={x}>\n            {columns.map((square, y) => (\n              <BoardSquare\n                key={y}\n                onClick={handlePlayClick(x, y, currentPlayer)}\n              >\n                {board[x][y] && <Cell color={board[x][y]} />}\n              </BoardSquare>\n            ))}\n          </BoardRow>\n        ))}\n      </Board>\n  )\n}","import { useState } from 'react';\n\nexport default function useBoard() {\n  const initialPlayer = 'black';\n  const initialBoard = Array(19).fill(Array(19).fill('empty'));\n\n  const [board, setBoard] = useState(initialBoard);\n  const [currentPlayer, setPlayer] = useState(initialPlayer);\n  const [winner, setWinner] = useState();\n\n  const countTotal = (newBoard, currentX, currentY, directionX, directionY) => {\n    const now = newBoard[currentX][currentY];\n    let tempX = currentX;\n    let tempY = currentY;\n    let total = 0;\n  \n    while (total < 5) {\n      tempX += directionX;\n      tempY += directionY;\n  \n      if (tempX < 0 || tempX > 18 || tempY < 0 || tempY > 18) {\n        break;\n      }\n  \n      if (newBoard[tempX][tempY] === now) {\n        total++;\n      } else {\n        break;\n      }\n    }\n    return total;\n  };\n  \n  const checkWinner = (newBoard, x, y) => {\n    if (\n      countTotal(newBoard, x, y, 1, 0) + countTotal(newBoard, x, y, -1, 0) >= 4 ||\n      countTotal(newBoard, x, y, 0, 1) + countTotal(newBoard, x, y, 0, -1) >= 4 ||\n      countTotal(newBoard, x, y, 1, 1) + countTotal(newBoard, x, y, -1, -1) >=  4 ||\n      countTotal(newBoard, x, y, 1, -1) + countTotal(newBoard, x, y, -1, 1) >= 4\n    ) {\n      setWinner(newBoard[x][y]);\n    }\n  };\n  \n  const handlePlayClick = (x, y, currentPlayer) => () => {\n    const newBoard = JSON.parse(JSON.stringify(board));\n  \n    if (board[x][y] === 'empty' && !winner) {\n      newBoard[x][y] = currentPlayer;\n    } else {\n      return;\n    }\n  \n    setBoard(newBoard);\n    setPlayer(currentPlayer === 'black' ? 'white' : 'black');\n    checkWinner(newBoard, x, y);\n  };\n  \n  const handleRestartButtonClick = () => {\n    setPlayer(initialPlayer);\n    setBoard(initialBoard);\n    setWinner();\n  };\n\n  return {\n    board,\n    winner,\n    currentPlayer,\n    handlePlayClick,\n    handleRestartButtonClick\n  }\n}","import './App.css';\nimport Introduction from './components/Introduction';\nimport Board from './components/Board';\nimport useBoard from './hooks/useBoard';\n\nfunction App() {\n  const {\n    board,\n    winner,\n    currentPlayer,\n    handlePlayClick,\n    handleRestartButtonClick,\n  } = useBoard();\n\n  return (\n    <div className=\"App\">\n      <Introduction\n        winner={winner}\n        handleRestartButtonClick={handleRestartButtonClick}\n      />\n\n      <Board\n        handlePlayClick={handlePlayClick}\n        currentPlayer={currentPlayer}\n        board={board}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}